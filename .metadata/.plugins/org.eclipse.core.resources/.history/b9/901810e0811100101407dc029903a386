package com.exam.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.DisabledException;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.exam.Service.impl.UserDetailsServiceImpl;
import com.exam.config.JwtUtils;
import com.exam.entity.JwtRequest;
import com.exam.entity.JwtResponse;

@RestController
public class AuthenticateController {
	@Autowired
	private AuthenticationManager authenticationManager;
	
	@Autowired
	private UserDetailsServiceImpl detailsServiceImpl;
	
	@Autowired
	private JwtUtils jwtUtils;
	
	
	//generate token
	
	@PostMapping("/generate-token")
	public ResponseEntity<?> genereteToken(@RequestBody JwtRequest jwtRequest){
		
		try {
			this.authenticate(jwtRequest.getUsrname(), jwtRequest.getPassword());
			
		}catch(UsernameNotFoundException e) {
			e.printStackTrace();
		}
		
		UserDetails user = this.detailsServiceImpl.loadUserByUsername(jwtRequest.getUsrname());
		
		String token = this.jwtUtils.generateToken(user);
		
		
		return ResponseEntity.ok(new JwtResponse(token));
	}
	
	
	
	private void authenticate(String username, String password) throws Exception {
	    try {
	        authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(username, password));
	    } catch (DisabledException e) {
	        throw new Exception("USER_DISABLED", e);
	    } catch (BadCredentialsException e) {
	        throw new Exception("INVALID_CREDENTIALS", e);
	    }
	}


}
